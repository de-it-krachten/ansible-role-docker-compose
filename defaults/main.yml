---

# -----------------------------------------------------------------------------
# Install
# -----------------------------------------------------------------------------

# type of installation (binary/pip/both)
docker_compose_type: both

# Should docker-compose be installed into a venv
docker_compose_pipinvenv: false

# Set virtual environment location
docker_compose_venv_path: /usr/local/venv/docker-compose

# Python to use for docker-compose in venv
docker_compose_venv_python: /usr/bin/python3

# API endpoint to get latest version
docker_compose_api: https://api.github.com/repos/docker/compose

# Download location for binary
docker_compose_repo: https://github.com/docker/compose

# Should the software be downloaded
docker_compose_download: true

# Version to install
docker_compose_version: latest

# Platform/architecture, as it makes part of the binary to download
docker_compose_platform: "{{ ansible_system | lower }}-{{ ansible_architecture }}"

# Target location/ownership/permissions for the binary
docker_compose_path: /usr/local/bin/docker-compose

# Default permissions for data directories
docker_compose_owner: root
docker_compose_group: root
docker_compose_mode: '0755'


# -----------------------------------------------------------------------------
# Template
# -----------------------------------------------------------------------------

# Path where docker-compose projects can be found
docker_compose_root: /export/docker

# Spefifies project location
docker_compose_project_dir: "{{ docker_compose_root }}/{{ docker_compose_project_name }}"

# Should the latest image be pulled during project start/restart
docker_compose_pull: false

# Force restart of the project (by default only when a change is found)
docker_compose_restart: false

# Execute template code as root
docker_compose_become: no
